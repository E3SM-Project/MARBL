All the tests are launched via python script (*.py files).

---------
| USAGE |
---------

For any script, run

$ ./[name].py -h

To see proper usage. The typical options are

usage: *.py [-h] [-c COMPILER] [-n NAMELIST] [--clean]
            [-m {local-gnu,yellowstone,hobart,edison}]

[Description of test]

optional arguments:
  -h, --help            show this help message and exit
  -c COMPILER, --compiler COMPILER
                        compiler to build with
  -n NAMELIST, --namelist NAMELIST
                        namelist file to read
  --clean               remove object, module, and library files for MARBL
                        driver
  -m {local-gnu,yellowstone,hobart,edison}, --mach {local-gnu,yellowstone,hobart,edison}
                        machine to build on

But some tests only require a subset of these. For example, bld_tests/bld_lib.py
and bld_tests/bld_exe.py do not accept the --compiler option (these particular
tests build with very compiler supported by the specified machine) or the
--namelist option (these tests do not read a namelist so there is no need to
specify one)

-------------------------------
| SUPPORTED / DEFAULT OPTIONS |
-------------------------------

The supported machines are the only valid values for the --mach option:

* local-gnu -- Assumes you are running on a machine where gfortran is installed
* yellowstone -- NCAR supercomputer
* hobart -- smaller NCAR cluster (managed by CGD)
* edison -- NERSC supercomputer

If you do not specify a machine, the default is 'local-gnu'

The supported compilers depend on the machine. For the --compiler option we use
the following shorthand

* gnu -- the GNU compiler, gfortran (default on local-gnu, also supported on
         yellowstone and hobart)
* intel -- the Intel compiler, ifort (default on yellowstone, also supported on
           hobart)
* nag -- the NAG compiler, nagfor (default on hobart)
* cray -- the Cray compiler, ftn (default on edison)
* pgi -- the PGI compiler, pgf90 (as of version 16.5, MARBL uses some Fortran
         2003 constructs that are still not available in PGI; as we develop
         workarounds and the compiler improves, this will be available on both
         yellowstone and hobart but for now it is not supported at all)

For tests that read MARBL configuration variables and parameters from namelists,
the default namelist file is marbl_in.

The last available option is --clean: this does NOT run the test, instead

$ make clean

is run from either the src/ directory or the driver_src/ directory (depending
on the scope of the test: tests that only build the library only clean the
library, while tests that run marbl.exe clean both the library and the driver)
